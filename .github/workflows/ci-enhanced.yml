name: CI Enhanced (Python + Java + E2E)

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ "**" ]
  workflow_dispatch:

jobs:
  # Python scraping pipeline tests
  python-tests:
    name: Python Tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.10", "3.11", "3.12" ]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install pytest pytest-asyncio pytest-cov pytest-xdist ruff
          fi

      - name: Lint with ruff
        run: ruff check .

      - name: Run Python tests with coverage
        run: |
          COV_TARGET="Scraping_project/src"
          if [ -d "$COV_TARGET" ]; then
            pytest -v --maxfail=3 -n auto --cov=$COV_TARGET --cov-report=xml --cov-report=term
          else
            pytest -v --maxfail=3 -n auto
          fi

      - name: Upload Python coverage
        if: matrix.python-version == '3.11'
        uses: actions/upload-artifact@v4
        with:
          name: python-coverage
          path: coverage.xml
          if-no-files-found: ignore

  # Java ETL loader tests
  java-tests:
    name: Java ETL Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build with Maven
        working-directory: Scraping_project/java-etl-loader
        run: mvn clean compile

      - name: Run unit tests
        working-directory: Scraping_project/java-etl-loader
        run: mvn test -Dtest=*Test

      - name: Run integration tests with Testcontainers
        working-directory: Scraping_project/java-etl-loader
        run: mvn verify -Dtest=*IntegrationTest

      - name: Upload Java test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: java-test-reports
          path: Scraping_project/java-etl-loader/target/surefire-reports/
          if-no-files-found: ignore

  # End-to-end pipeline test
  e2e-test:
    name: End-to-End Pipeline Test
    runs-on: ubuntu-latest
    needs: [python-tests, java-tests]

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: uconn_warehouse_test
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: "pip"

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || pip install scrapy pytest

      - name: Build Java ETL loader
        working-directory: Scraping_project/java-etl-loader
        run: mvn clean package -DskipTests

      - name: Run E2E test script
        env:
          DATABASE_URL: jdbc:postgresql://localhost:5432/uconn_warehouse_test
          DATABASE_USER: test
          DATABASE_PASSWORD: test
        run: |
          chmod +x Scraping_project/tests/e2e/run_e2e_test.sh
          Scraping_project/tests/e2e/run_e2e_test.sh

      - name: Upload E2E test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-results
          path: Scraping_project/tests/e2e/results/
          if-no-files-found: ignore
